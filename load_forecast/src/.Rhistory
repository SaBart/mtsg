?read.csv
n=60 # aggregate by hours
load_sun<- ts(rowSums(matrix(read.csv(file="load_sun.csv",sep=",",head=FALSE,stringsAsFactors=FALSE),ncol =n)))
n=60 # aggregate by hours
load_sun<- ts(rowSums(matrix(read.csv(file="load_sun.csv",sep=",",head=FALSE,stringsAsFactors=TRUE),ncol =n)))
n=60 # aggregate by hours
load_sun<- ts(rowSums(matrix(read.csv(as.numeric(file="load_sun.csv",sep=",",head=FALSE)),ncol =n)))
n=60 # aggregate by hours
load_sun<- ts(rowSums(matrix(as.numeric(read.csv(file="load_sun.csv",sep=",",head=FALSE)),ncol =n)))
n=60 # aggregate by hours
load_sun<- ts(rowSums(matrix(read.csv(file="load_sun.csv",sep=",",head=FALSE),ncol =n)))
n=60 # aggregate by hours
load_sun<- ts(read.csv(file="load_sun.csv",sep=",",head=FALSE)))
n=60 # aggregate by hours
load_sun<- ts(read.csv(file="load_sun.csv",sep=",",head=FALSE))
load_nosun<- ts(rowSums(matrix(read.csv(file="load_nosun.csv",sep=",",head=FALSE),ncol=n)))
n=60 # aggregate by hours
load_sun<- ts(read.csv(file="load_sun.csv",sep=",",head=FALSE))
load_nosun<- ts(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
?tapply
?seq_along
seq_along(load_sun)
seq_along(load_sun)/10
seq_along(load_sun)-1/10
(seq_along(load_sun)-1)%?%10
(seq_along(load_sun)-1)%/%10
seq_along((1,2,3))
seq_along([1,2,3])
x=[1;2;3]
seq_along(c(1,2,3))
seq_along(c(10,9,8))
seq_along(c(10,9,8))
10%/%10
11%/%10
19%/%10
20%/%10
20%10
20%%10
20/10
21/10
21%/%10
x=seq(1,20)
x
tapply(x,seq_along(x)-1%/%10, sum)
tapply(x,seq_along(x)-1%/%10, sum)
tapply(x,(seq_along(x)-1)%/%10, sum)
tapply(x,(seq_along(x)-1)%/%2, sum)
x
seq_along(x)-1)%/%2
(seq_along(x)-1)%/%2
tappl?
tapply?
tapply?
?tapply
sun_raw<- read.csv(file="load_sun.csv",sep=",",head=FALSE)
nosun_raw<- read.csv(file="load_nosun.csv",sep=",",head=FALSE)
n=60 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(sun_ts)
sun_raw<- read.csv(file="load_sun.csv",sep=",",head=FALSE)
nosun_raw<- read.csv(file="load_nosun.csv",sep=",",head=FALSE)
n=60 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
sun_ts
sun_agg
sun_raw
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
(seq_along(sun_raw)-1) %/% n
seq_along(sun_raw)
seq_along(t(sun_raw))
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
n=60 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(sun_ts)
sun_ts
plot(nosun_ts)
plot(sun_agg,seq_along(sun_agg))
plot(seq_along(sun_agg),sun_agg,)
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
n=1440 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,)
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
n=1440*12 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,)
plot(seq_along(sun_agg),sun_agg)
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
n=1440*30 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg)
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
n=1440 # aggregate by hours
sun_agg=tapply( sun_raw, (seq_along(sun_raw)-1) %/% n, sum)
nosun_agg=tapply( nosun_raw, (seq_along(nosun_raw)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg)
?plot
plot(seq_along(sun_agg),sun_agg,type="b")
days=30 # number of days to plot
n=1440 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:days*24*60]
nosun=nosun_raw[1:days*24*60]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
days=30 # number of days to plot
n=1440 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:days*24*60]
nosun=nosun_raw[1:days*24*60]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
days=1 # number of days to plot
n=1440 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:days*24*60]
nosun=nosun_raw[1:days*24*60]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,type="b")
sun_raw[1:days*24*60]
sun_raw[1:2]
sun_raw[1:10]
sun_raw[1:(days*24*60)]
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:(days*24*60)]
nosun=nosun_raw[1:(days*24*60)]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,type="b")
days=1 # number of days to plot
n=24 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:(days*24*60)]
nosun=nosun_raw[1:(days*24*60)]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,type="b")
days=1 # number of days to plot
n=60 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:(days*24*60)]
nosun=nosun_raw[1:(days*24*60)]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,type="b")
?plot
plot(seq_along(sun_agg),sun_agg,type="b",col="red")
plot(seq_along(sun_agg),sun_agg,type="b",col="red")
plot(seq_along(nosun_agg),nosun_agg,type="b",col="blue")
sun_raw-nosun_raw
sum(sun_raw-nosun_raw)
days=10 # number of days to plot
n=60 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:(days*24*60)]
nosun=nosun_raw[1:(days*24*60)]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,type="b",col="red")
plot(seq_along(nosun_agg),nosun_agg,type="b",col="blue")
days=5 # number of days to plot
n=60 # aggregate by hours
sun_raw<- t(read.csv(file="load_sun.csv",sep=",",head=FALSE))
nosun_raw<- t(read.csv(file="load_nosun.csv",sep=",",head=FALSE))
sun=sun_raw[1:(days*24*60)]
nosun=nosun_raw[1:(days*24*60)]
sun_agg=tapply( sun, (seq_along(sun)-1) %/% n, sum)
nosun_agg=tapply( nosun, (seq_along(nosun)-1) %/% n, sum)
sun_ts=ts(sun_agg)
nosun_ts=ts(nosun_agg)
plot(seq_along(sun_agg),sun_agg,type="b",col="red")
plot(seq_along(nosun_agg),nosun_agg,type="b",col="blue")
library(forecast)
install.packages("forecast")
library(forecast)
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
?rm
rm(list=ls())
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
births <- ts(scan("http://robjhyndman.com/tsdldata/data/nybirths.dat"), frequency=12, start=c(1946,1))
births
plot.ts(births)
births[1,]
births[,1]
load=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_proc.csv')
?read.csv
?ts
load=ts(read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_proc.csv',header=TRUE,sep=',',dec='.'),frequency=24)
load
plot.ts(load)
?ets
?forecast.ets
loads=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_proc.csv',header=TRUE,sep=',',dec='.')
loads.ts=ts(oads,frequency=findfrequency(loads))
loads.ts=ts(loads,frequency=findfrequency(loads))
library(forecast)
loads.ts=ts(loads,frequency=findfrequency(loads))
loads.ts
findfrequency(loads)
model.best=ets(load,model="ZZZ",opt.crit="lik",ic="aic")
loads
loads[X1]
loads[[X1]]
loads[["X1"]]
loads[[0]]
loads[[1]]
hour.ts=ts(loads[[10]],frequency=findfrequency(loads))
hour=ts(loads[[10]],frequency=findfrequency(loads))
hpour
hour
hour=ts(loads[[10]],frequency=findfrequency(loads[[10]]))
findfrequency(loads[[10]])
model.best=ets(loads,model="ZZZ",opt.crit="lik",ic="aic")
model.best=ets(hour,model="ZZZ",opt.crit="lik",ic="aic")
plot.ts(hour)
model=ets(hour,model="ZZZ",opt.crit="lik",ic="aic")
forecast(hour,model,h=10)
model.forecast(hour,h=10)
model.forecast(model,h=10)
forecast(model,h=10)
plot(forecast(model,h=10))
plot(forecast(model,h=50))
hour
hour.start
attributes(hour)
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
test=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_test.csv',header=TRUE,sep=',',dec='.')
train_hour=ts(train[[10]],frequency=findfrequency(train[[10]]))
fit=ets(train_hour)
fit_train=ets(train_hour)
test_hour=ts(test[[10]],frequency=findfrequency(test[[10]]))
fit_train=ets(train_hour)
fit_test=ets(test_hour,model=fit_train)
plot(forecast(fit_test,h=50))
plot(forecast(fit_test))
fitted(fit_test)
plot.ts(fitted(fit_test))
plot.ts(test)
plot.ts(test_hour)
pred=fitted(fit_test)
plot.ts(pred)
plot.ts(test_hour)
plot.ts(pred)
plot.ts(test_hour)
plot(train_hour)
plot.ts(test_hour)
plot(train_hour)
plot.ts(pred)
plot.ts(test_hour)
ts.plot(test_hour,pred)
plot.ts(pred)
ts.plot(test_hour,pred)
library(xts)
install.packages("xts")
library(xts)
install.packages("xtsExtra", repos="http://R-Forge.R-project.org")
install.packages("xtsExtra")
library(xtsExtra)
?gpars
ts.plot(test_hour,pred,col=c("red","blue"))
ts.plot(test_hour,pred,col=c("black","red"))
ts.plot(test_hour,pred,col=c("black","red"),lty=c(1,3))
ts.plot(test_hour,pred,col=c("black","red"),lty=c(3,1))
train_pred=fitted(fit_train)
ts.plot(train_hour,train_pred,col=c("black","red"),lty=c(3,1))
ts.plot(train_hour,train_pred,col=c("black","red"),lty=c(5,1))
ts.plot(test_hour,test_pred,col=c("black","red"),lty=c(5,1))
test_pred=fitted(fit_test)
ts.plot(test_hour,test_pred,col=c("black","red"),lty=c(5,1))
getwd()
setwd('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/src')
fit_train=ets(train[[10]])
fit_train=ets(train[[10]])
fit_test=ets(test[[10]],model=fit_train)
train_pred=fitted(fit_train)
test_pred=fitted(fit_test)
ts.plot(train_hour,train_pred,col=c('black','red'),lty=c(5,1))
train_pred=fitted(fit_train)
test_pred=fitted(fit_test)
ts.plot(train_hour,train_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_hour,test_pred,col=c('black','red'),lty=c(5,1))
loads_ts=ts(loads,frequency = findfrequency(loads))
loads_ts
library(xts)
train_hour=xts(train[[10]],frequency=findfrequency(train[[10]]))
xts(train[[10]])
train[[10]]
xts(loads)
loads$date
time=as.POSIXct(loads$date)
time
time=as.POSIXct(loads$date, format = "%Y-%m-%d")
time
xst(loads,order.by=as.POSIXct(loads$date))
library(xts)
xts(loads,order.by=as.POSIXct(loads$date))
train_hour=xts(loads[[10]],order.by=as.POSIXct(loads$date))
train_hour=xts(train[[10]],order.by=as.POSIXct(train$date))
test_hour=xts(test[[10]],order.by=as.POSIXct(test$date))
fit_train=ets(train_hour)
fit_test=ets(test_hour,model=fit_train)
train_pred=fitted(fit_train)
test_pred=fitted(fit_test)
ts.plot(train_hour,train_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_hour,test_pred,col=c('black','red'),lty=c(5,1))
train_hour=ts(train[[10]],frequency=findfrequency(train[[10]]))
test_hour=ts(test[[10]],frequency=findfrequency(test[[10]]))
fit_train=ets(train_hour)
fit_test=ets(test_hour,model=fit_train)
ts.plot(train_hour,train_pred,col=c('black','red'),lty=c(5,1))
train_pred=fitted(fit_train)
test_pred=fitted(fit_test)
ts.plot(test_hour,test_pred,col=c('black','red'),lty=c(5,1))
train_ts=ts(train[[10]],frequency=findfrequency(train[[10]]))
test_ts=ts(test[[10]],frequency=findfrequency(test[[10]]))
train_xts=xts(train[[10]],order.by=as.POSIXct(train$date))
test_xts=xts(test[[10]],order.by=as.POSIXct(test$date))
fit_train_ts=ets(train_ts)
fit_test_ts=ets(test_ts,model=fit_train_ts)
fit_train_xts=ets(train_xts)
fit_test_xts=ets(test_xts,model=fit_train_xts)
train_ts_pred=fitted(fit_train_ts)
test_ts_pred=fitted(fit_test_ts)
train_xts_pred=fitted(fit_train_xts)
test_xts_pred=fitted(fit_test_xts)
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_ts,test_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(train_xts,train_xts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_xts,test_xts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_ts,test_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_xts,test_xts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(train_xts,train_xts_pred,col=c('black','red'),lty=c(5,1))
train.rx(True,1)
train[1]
train["date"]
train$date
train_xts=xts(train[[10]],order.by=as.POSIXct(train["date"]))
train_xts=xts(train[[10]],order.by=as.POSIXct(train[["date"]]))
train[["date"]]
train_xts=xts(train[[10]],as.POSIXct(train[["date"]]))
train_xts
train
library(forecast)
library(xts)
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
test=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_test.csv',header=TRUE,sep=',',dec='.')
train_xts=xts(train[[10]],as.POSIXct(train[["date"]]))
test_xts=xts(test[[10]],order.by=as.POSIXct(test$date))
?read.csv
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
test=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_test.csv',header=TRUE,sep=',',dec='.')
train_ts=ts(train[[10]],frequency=1)
test_ts=ts(test[[10]],frequency=1)
test_ts=ts(test[[10]],frequency=1)
train_ts=ts(train[[10]],frequency=1)
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
train_ts=ts(train[[10]],frequency=1)
train_ts=ts(train,frequency=1)
fit_train_ts=ets(train_ts)
fit_test_ts=ets(test_ts,model=fit_train_ts)
train_ts_pred=fitted(fit_train_ts)
test_ts_pred=fitted(fit_test_ts)
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
train_ts
test_ts
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
test=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_test.csv',header=TRUE,sep=',',dec='.')
train_ts=ts(train[[10]],frequency=1)
test_ts=ts(test[[10]],frequency=1)
train_ts=ts(train[[10]],frequency=findfrequency(train[[10]]))
test_ts=ts(test[[10]],frequency=findfrequency(test[[10]]))
fit_train_ts=ets(train_ts)
fit_test_ts=ets(test_ts,model=fit_train_ts)
train_ts_pred=fitted(fit_train_ts)
test_ts_pred=fitted(fit_test_ts)
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_ts,test_ts_pred,col=c('black','red'),lty=c(5,1))
train_xts=xts(train[[10]],as.POSIXct(train[["date"]]))
test_xts=xts(test[[10]],order.by=as.POSIXct(test$date))
fit_train_xts=ets(train_xts)
fit_test_xts=ets(test_xts,model=fit_train_xts)
train_xts_pred=fitted(fit_train_xts)
test_xts_pred=fitted(fit_test_xts)
ts.plot(train_xts,train_xts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_xts,test_xts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_ts,test_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_xts,test_xts_pred,col=c('black','red'),lty=c(5,1))
train_ts=ts(train[[0]],frequency=findfrequency(train[[0]]))
test_ts=ts(test[[0]],frequency=findfrequency(test[[0]]))
fit_train_ts=ets(train_ts)
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
test=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_test.csv',header=TRUE,sep=',',dec='.')
train_ts=ts(train[[0]],frequency=findfrequency(train[[0]]))
train_fit
train=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_train.csv',header=TRUE,sep=',',dec='.')
test=read.csv('C:/Users/SABA/Google Drive/mtsg/code/load_forecast/data/load_test.csv',header=TRUE,sep=',',dec='.')
train_ts=ts(train[[0]],frequency=findfrequency(train[[0]]))
train_ts=ts(train[[1]],frequency=findfrequency(train[[1]]))
test_ts=ts(test[[1]],frequency=findfrequency(test[[1]]))
fit_train_ts=ets(train_ts)
fit_test_ts=ets(test_ts,model=fit_train_ts)
train_ts_pred=fitted(fit_train_ts)
test_ts_pred=fitted(fit_test_ts)
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_ts,test_ts_pred,col=c('black','red'),lty=c(5,1))
train_ts=ts(train[[2]],frequency=findfrequency(train[[2]]))
test_ts=ts(test[[2]],frequency=findfrequency(test[[2]]))
fit_train_ts=ets(train_ts)
fit_test_ts=ets(test_ts,model=fit_train_ts)
train_ts_pred=fitted(fit_train_ts)
test_ts_pred=fitted(fit_test_ts)
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(test_ts,test_ts_pred,col=c('black','red'),lty=c(5,1))
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
train_ts_pred=fitted(fit_train_ts)
ts.plot(train_ts,train_ts_pred,col=c('black','red'),lty=c(5,1))
fit_test_ts=ets(test_ts,model=fit_train_ts)
test_ts
findfrequency(test_ts)
findfrequency(train_ts)
ts.plot(test)
test
test_ts
library(forecast)
library(fpp)
install.packages("fpp")
library(fpp)
h <- 5
train <- window(hsales,end=1989.99)
test <- window(hsales,start=1990)
n <- length(test) - h + 1
fit <- auto.arima(train)
order <- arimaorder(fit)
fcmat <- matrix(0, nrow=n, ncol=h)
?window
window?
?window
library(forecast)
library(fpp)
h <- 5
train <- window(hsales,end=1989.99)
test <- window(hsales,start=1990)
n <- length(test) - h + 1
fit <- auto.arima(train)
order <- arimaorder(fit)
for(i in 1:n)
{
x <- window(hsales, end=1989.99 + (i-1)/12)
refit <- Arima(x, order=order[1:3], seasonal=order[4:6])
fcmat[i,] <- forecast(refit, h=h)$mean
}
hsales
window(hsales,start=1,end=2)
window(hsales,end=2)
window(hsales,start=1)
window(hsales,start=2)
fit_train$components
fit_train$states
fit_train$components
paste0(fit_train$components)
paste0(c(fit_train$components))
R.Version()
Sys.getenv("R_ARCH")
